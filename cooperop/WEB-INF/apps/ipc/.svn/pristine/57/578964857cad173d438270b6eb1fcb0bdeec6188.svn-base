package cn.crtech.cooperop.ipc.dao;

import java.util.Map;

import cn.crtech.cooperop.bus.mvc.model.BaseDao;
import cn.crtech.cooperop.bus.rdms.Record;
import cn.crtech.cooperop.bus.rdms.Result;
import cn.crtech.cooperop.bus.util.CommonFun;

public class CommentReportDao extends BaseDao{

	public Result query(Map<String, Object> map) throws Exception {
		StringBuffer sql = new StringBuffer();
		sql.append("SELECT                                                                                       ");
		sql.append("pat.createtime,                                                                              ");
		sql.append("dbo.GET_PATIENT_XX(pat.patient_id,pat.visit_id) as patient_name,                                                                            ");
		sql.append("pat.pharmacist_comment_id,                                                                   ");
		sql.append("pat.patient_id,pat.visit_id,                                                                           ");
		sql.append("pat.user_name AS doctor,                                                                     ");
		sql.append("pat.Check_Pharmacist,                                                                        ");
		sql.append("pat.kangjun_count, ");
		sql.append("pat.is_zs, ");
		sql.append("pat.base_drug_count, ");
		sql.append("pat.comment_result, ");
		sql.append("pat.drug_breed_count ");
		sql.append("FROM                                                                                         ");
		sql.append("	(                                                                                        ");
		sql.append("SELECT                                                                                       ");
		sql.append("	yoc.patient_id,                                                                          ");
		sql.append("	yoc.visit_id,                                                                            ");
		sql.append("	dhu.user_name,                                                                           ");
		sql.append("	cr.Check_Pharmacist,                                                                     ");
		sql.append("	cast(yo.createtime as datetime) createtime,                                                                           ");
		sql.append("	pharmacist_comment_id = '【'+                                                                 ");
		sql.append("	stuff((select '【'+comment_system_code+'】' from YWLSB_ORDERS_COMMENT y (nolock)                     ");
		sql.append("	where y.patient_id=  yoc.patient_id                                                      ");
		sql.append("    and y.visit_id=yoc.visit_id for XML PATH('')),1,1,''),                                   ");
		sql.append("(                                                                                            ");
		sql.append("SELECT                                                                                       ");
		sql.append("	count( a.ORDER_CODE )                                                                    ");
		sql.append("FROM                                                                                         ");
		sql.append("	( SELECT ORDER_CODE FROM YWLSB_ORDERS  (nolock)                                                  ");
		sql.append("    WHERE patient_id = yoc.patient_id                                                        ");
		sql.append("    AND visit_id = yoc.visit_id GROUP BY ORDER_CODE ) a                                      ");
		sql.append("	) AS drug_breed_count,                                                                   ");
		sql.append("	(                                                                                        ");
		sql.append("SELECT                                                                                       ");
		sql.append("	count( b.ORDER_CODE )                                                                    ");
		sql.append("FROM                                                                                         ");
		sql.append("	(                                                                                        ");
		sql.append("SELECT                                                                                       ");
		sql.append("	a.ORDER_CODE                                                                             ");
		sql.append("FROM                                                                                         ");
		sql.append("	YWLSB_ORDERS a (nolock)                                                                          ");
		sql.append("	LEFT JOIN YWLSB_ORDERS_PROPERTY b (nolock) ON a.p_key = b.p_key                                   ");
		sql.append("WHERE                                                                                        ");
		sql.append("	b.ORDER_TPJCH = '抗'                                                                     ");
		sql.append("	AND a.patient_id = yoc.patient_id                                                        ");
		sql.append("	AND a.visit_id = yoc.visit_id                                                            ");
		sql.append("GROUP BY                                                                                     ");
		sql.append("	a.ORDER_CODE                                                                             ");
		sql.append("	) b                                                                                      ");
		sql.append("	) AS kangjun_count,                                                                      ");
		sql.append("	(                                                                                        ");
		sql.append("SELECT                                                                                       ");
		sql.append("	( CASE zs_count.counts WHEN 0 THEN '0' ELSE '1' END )                                    ");
		sql.append("FROM                                                                                         ");
		sql.append("	(                                                                                        ");
		sql.append("SELECT                                                                                       ");
		sql.append("	count( b.ORDER_CODE ) AS counts                                                          ");
		sql.append("FROM                                                                                         ");
		sql.append("	(                                                                                        ");
		sql.append("SELECT                                                                                       ");
		sql.append("	a.ORDER_CODE                                                                             ");
		sql.append("FROM                                                                                         ");
		sql.append("	YWLSB_ORDERS a  (nolock)                                                                         ");
		sql.append("	LEFT JOIN dict_his_drug b (nolock) ON a.ORDER_CODE = b.drug_code                                  ");
		sql.append("	LEFT JOIN dict_sys_drug c (nolock) ON b.sys_p_key = c.p_key                                       ");
		sql.append("WHERE                                                                                        ");
		sql.append("	a.patient_id = yoc.patient_id                                                            ");
		sql.append("	AND a.visit_id = yoc.visit_id                                                            ");
		sql.append("	AND ( c.Jixing = '注射液' OR c.Jixing = '粉针剂' )                                       ");
		sql.append("GROUP BY                                                                                     ");
		sql.append("	a.ORDER_CODE                                                                             ");
		sql.append("	) b                                                                                      ");
		sql.append("	) AS zs_count                                                                            ");
		sql.append("	) AS is_zs,                                                                              ");
		sql.append("	(                                                                                        ");
		sql.append("SELECT                                                                                       ");
		sql.append("	count( b.drug_name )                                                                     ");
		sql.append("FROM                                                                                         ");
		sql.append("	(                                                                                        ");
		sql.append("SELECT                                                                                       ");
		sql.append("	c.drug_name                                                                              ");
		sql.append("FROM                                                                                         ");
		sql.append("	YWLSB_ORDERS a (nolock)                                                                          ");
		sql.append("	LEFT JOIN dict_his_drug b (nolock) ON a.ORDER_CODE = b.drug_code                                  ");
		sql.append("	LEFT JOIN dict_sys_drug c (nolock) ON b.sys_p_key = c.p_key                                       ");
		sql.append("WHERE                                                                                        ");
		sql.append("	a.patient_id = yoc.patient_id                                                            ");
		sql.append("	AND a.visit_id = yoc.visit_id                                                            ");
		sql.append("GROUP BY                                                                                     ");
		sql.append("	c.drug_name                                                                              ");
		sql.append("	) b                                                                                      ");
		sql.append("	) AS base_drug_count,                                                                    ");
		sql.append("	(                                                                                        ");
		sql.append("SELECT                                                                                       ");
		sql.append("	( CASE comment_result_count.counts WHEN 0 THEN '1' ELSE '0' END )                        ");
		sql.append("FROM                                                                                         ");
		sql.append("	(                                                                                        ");
		sql.append("SELECT                                                                                       ");
		sql.append("	count( a.patient_id ) AS counts                                                          ");
		sql.append("FROM                                                                                         ");
		sql.append("	YWLSB_ORDERS_COMMENT a (nolock)                                                                   ");
		sql.append("WHERE                                                                                        ");
		sql.append("	comment_result = '0'                                                                     ");
		sql.append("	AND a.patient_id = yoc.patient_id                                                        ");
		sql.append("	AND a.visit_id = yoc.visit_id                                                            ");
		sql.append("	) comment_result_count                                                                   ");
		sql.append("	) AS comment_result                                                                      ");
		
		sql.append("FROM                                                                                         ");
		sql.append("	YWLSB_ORDERS_COMMENT yoc   (nolock)                                                              ");
		sql.append("	LEFT JOIN YWLSB_ORDERS yo (nolock) ON yoc.PATIENT_ID = yo.PATIENT_ID                              ");
		sql.append("	AND yoc.visit_id = yo.visit_id                                                           ");
		sql.append("	AND yoc.order_no = yo.order_no                                                           ");
		sql.append("	LEFT JOIN dict_his_users dhu (nolock) ON dhu.p_key = yo.doctor_no                                 ");
		sql.append("	LEFT JOIN YWLSB_AUDIT_ORDERS_check_result cr (nolock) ON yoc.PATIENT_ID = cr.PATIENT_ID           ");
		sql.append("	AND yoc.visit_id = cr.visit_id                                                           ");
		sql.append("	AND yoc.order_no = cr.order_no                                                           ");
		sql.append("GROUP BY                                                                                     ");
		sql.append("	yoc.patient_id,                                                                          ");
		sql.append("	yoc.visit_id,                                                                            ");
		sql.append("	dhu.user_name,                                                                           ");
		sql.append("	cr.Check_Pharmacist,                                                                     ");
		sql.append("	yo.createtime                                                                           ");
		sql.append("	) pat                                                                                    ");
		sql.append(" where 1=1 ");
		setParameter(map, "start_time", " and pat.createtime>= :start_time ", sql);
		setParameter(map, "end_time", " and pat.createtime<= :end_time ", sql);
		if (!CommonFun.isNe(map.get("q_is_zs")) && "1".equals(map.get("q_is_zs")) || "0".equals(map.get("q_is_zs"))) {
			sql.append(" and pat.is_zs= :q_is_zs ");
		}
		if (!CommonFun.isNe(map.get("is_comment_result")) && "1".equals(map.get("is_comment_result")) || "0".equals(map.get("is_comment_result"))) {
			sql.append(" and pat.comment_result= :is_comment_result ");
		}
		return executeQueryLimit(sql.toString(), map);
	}

	public Record getDrugCountAll(Map<String, Object> map) throws Exception {
		StringBuffer sql = new StringBuffer();
		sql.append("SELECT                                                               "); 
		sql.append("sum( a.drug_breed_count ) drugcountall                               "); 
		sql.append("FROM                                                                 "); 
		sql.append("	(                                                                "); 
		sql.append("SELECT                                                               "); 
		sql.append("	(                                                                "); 
		sql.append("SELECT                                                               "); 
		sql.append("	count( a.ORDER_CODE )                                            "); 
		sql.append("FROM                                                                 "); 
		sql.append("	( SELECT ORDER_CODE FROM YWLSB_ORDERS  (nolock)                          "); 
		sql.append("	WHERE patient_id = yoc.patient_id                                "); 
		sql.append("	AND visit_id = yoc.visit_id GROUP BY ORDER_CODE ) a              "); 
		sql.append("	) AS drug_breed_count                                            "); 
		sql.append("FROM                                                                 "); 
		sql.append("	YWLSB_ORDERS_COMMENT yoc (nolock)                                        "); 
		sql.append("	LEFT JOIN YWLSB_ORDERS yo (nolock) ON yoc.PATIENT_ID = yo.PATIENT_ID      "); 
		sql.append("	AND yoc.visit_id = yo.visit_id                                   "); 
		sql.append("	AND yoc.order_no = yo.order_no                                   "); 
		
		sql.append(" where 1=1 ");
		setParameter(map, "start_time", " and yo.createtime>= :start_time ", sql);
		setParameter(map, "end_time", " and yo.createtime<= :end_time ", sql);
		
		sql.append("GROUP BY                                                             "); 
		sql.append("	yoc.patient_id,                                                  "); 
		sql.append("	yoc.visit_id,                                                    "); 
		sql.append("	yo.createtime                                                    "); 
		sql.append("	) a                                                              "); 
		return executeQuerySingleRecord(sql.toString(), map);
	}

	public Map<String, Object> getDrugAve(Map<String, Object> map) throws Exception {
		StringBuffer sql = new StringBuffer();
		sql.append("SELECT                                                                 "); 
		sql.append("	( sum( a.drug_breed_count ) /                                      "); 
		sql.append("	count( a.drug_breed_count ) )                                      "); 
		sql.append("	AS average_drug_breed_count,                                       "); 
		sql.append("	count( a.drug_breed_count ) as pre_counts                          ");
		sql.append("FROM                                                                   "); 
		sql.append("	(                                                                  "); 
		sql.append("SELECT                                                                 "); 
		sql.append("	(                                                                  "); 
		sql.append("SELECT                                                                 "); 
		sql.append("	count( a.ORDER_CODE )                                              "); 
		sql.append("FROM                                                                   "); 
		sql.append("	( SELECT ORDER_CODE FROM YWLSB_ORDERS (nolock)                             "); 
		sql.append("	WHERE patient_id = yoc.patient_id                                  "); 
		sql.append("	AND visit_id = yoc.visit_id GROUP BY ORDER_CODE ) a                "); 
		sql.append("	) AS drug_breed_count                                              "); 
		sql.append("FROM                                                                   "); 
		sql.append("	YWLSB_ORDERS_COMMENT yoc  (nolock)                                         "); 
		sql.append("	LEFT JOIN YWLSB_ORDERS yo (nolock) ON yoc.PATIENT_ID = yo.PATIENT_ID        "); 
		sql.append("	AND yoc.visit_id = yo.visit_id                                     "); 
		sql.append("	AND yoc.order_no = yo.order_no                                     "); 
		sql.append(" where 1=1 ");
		setParameter(map, "start_time", " and yo.createtime>= :start_time ", sql);
		setParameter(map, "end_time", " and yo.createtime<= :end_time ", sql);
		sql.append("GROUP BY                                                               "); 
		sql.append("	yoc.patient_id,                                                    "); 
		sql.append("	yoc.visit_id,                                                      "); 
		sql.append("	yo.createtime                                                      "); 
		sql.append("	) a                                                                "); 
		return executeQuerySingleRecord(sql.toString(), map);
	}

	public Map<String, Object> getUseKJCount(Map<String, Object> map) throws Exception{
		StringBuffer sql = new StringBuffer();
		sql.append("select count(1) usekjcount,sum(a.kangjun_count) useallkjcount from                                                  ");
		sql.append("(                                                                     ");
		sql.append("SELECT                                                                ");
		sql.append("	(                                                                 ");
		sql.append("SELECT                                                                ");
		sql.append("	count( b.ORDER_CODE )                                             ");
		sql.append("FROM                                                                  ");
		sql.append("	(                                                                 ");
		sql.append("SELECT                                                                ");
		sql.append("	a.ORDER_CODE                                                      ");
		sql.append("FROM                                                                  ");
		sql.append("	YWLSB_ORDERS a (nolock)                                                    ");
		sql.append("	LEFT JOIN YWLSB_ORDERS_PROPERTY b  (nolock)ON a.p_key = b.p_key            ");
		sql.append("WHERE                                                                 ");
		sql.append("	b.ORDER_TPJCH = '抗'                                              ");
		sql.append("	AND a.patient_id = yoc.patient_id                                 ");
		sql.append("	AND a.visit_id = yoc.visit_id                                     ");
		sql.append("GROUP BY                                                              ");
		sql.append("	a.ORDER_CODE                                                      ");
		sql.append("	) b                                                               ");
		sql.append("	) AS kangjun_count                                                ");
		sql.append("FROM                                                                  ");
		sql.append("	YWLSB_ORDERS_COMMENT yoc   (nolock)                                       ");
		sql.append("	LEFT JOIN YWLSB_ORDERS yo (nolock) ON yoc.PATIENT_ID = yo.PATIENT_ID       ");
		sql.append("	AND yoc.visit_id = yo.visit_id                                    ");
		sql.append("	AND yoc.order_no = yo.order_no                                    ");
		sql.append(" where 1=1 ");
		setParameter(map, "start_time", " and yo.createtime>= :start_time ", sql);
		setParameter(map, "end_time", " and yo.createtime<= :end_time ", sql);
		sql.append("GROUP BY                                                              ");
		sql.append("	yoc.patient_id,                                                   ");
		sql.append("	yoc.visit_id,                                                     ");
		sql.append("	yo.createtime                                                     ");
		sql.append("	) a                                                               ");
		sql.append("	where a.kangjun_count>0                                           ");
		return executeQuerySingleRecord(sql.toString(), map);
	}

	public Map<String, Object> getUseZsCount(Map<String, Object> map) throws Exception {
		StringBuffer sql = new StringBuffer();
		sql.append("select count(1)  usezscount  from                                    "); 
		sql.append("(                                                                    "); 
		sql.append("select                                                               "); 
		sql.append("	(SELECT                                                          "); 
		sql.append("	count( b.ORDER_CODE ) AS counts                                  "); 
		sql.append("FROM                                                                 "); 
		sql.append("(SELECT                                                              "); 
		sql.append("	a.ORDER_CODE                                                     "); 
		sql.append("FROM                                                                 "); 
		sql.append("	YWLSB_ORDERS a (nolock)                                                  "); 
		sql.append("	LEFT JOIN dict_his_drug b (nolock) ON a.ORDER_CODE = b.drug_code          "); 
		sql.append("	LEFT JOIN dict_sys_drug c (nolock) ON b.sys_p_key = c.p_key               "); 
		sql.append("WHERE                                                                "); 
		sql.append("	a.patient_id = yoc.patient_id                                    "); 
		sql.append("	AND a.visit_id = yoc.visit_id                                    "); 
		sql.append("	AND ( c.Jixing = '注射液' OR c.Jixing = '粉针剂' )               "); 
		sql.append("GROUP BY                                                             "); 
		sql.append("	a.ORDER_CODE) b                                                  "); 
		sql.append("	) AS zs_count                                                    "); 
		sql.append("FROM                                                                 "); 
		sql.append("	YWLSB_ORDERS_COMMENT yoc  (nolock)                                       "); 
		sql.append("	LEFT JOIN YWLSB_ORDERS yo (nolock) ON yoc.PATIENT_ID = yo.PATIENT_ID      "); 
		sql.append("	AND yoc.visit_id = yo.visit_id                                   "); 
		sql.append("	AND yoc.order_no = yo.order_no                                   "); 
		sql.append(" where 1=1 ");
		setParameter(map, "start_time", " and yo.createtime>= :start_time ", sql);
		setParameter(map, "end_time", " and yo.createtime<= :end_time ", sql);
		sql.append("GROUP BY                                                             "); 
		sql.append("	yoc.patient_id,                                                  "); 
		sql.append("	yoc.visit_id,                                                    "); 
		sql.append("	yo.createtime                                                    "); 
		sql.append("	) a                                                              "); 
		sql.append("	where a.zs_count>0                                               "); 
		return executeQuerySingleRecord(sql.toString(), map);
	}

	public Map<String, Object> getUseGeneralCount(Map<String, Object> map) throws Exception{
		StringBuffer sql = new StringBuffer();
		sql.append("select sum(a.counts)  usegeneralcount from                        ");
		sql.append("	(                                                             ");
		sql.append("select (                                                          ");
		sql.append("	SELECT                                                        ");
		sql.append("	count( b.drug_name )                                          ");
		sql.append("	FROM                                                          ");
		sql.append("		(                                                         ");
		sql.append("	SELECT                                                        ");
		sql.append("		c.drug_name                                               ");
		sql.append("	FROM                                                          ");
		sql.append("		YWLSB_ORDERS a  (nolock)                                          ");
		sql.append("		LEFT JOIN dict_his_drug b (nolock) ON a.ORDER_CODE = b.drug_code   ");
		sql.append("		LEFT JOIN dict_sys_drug c (nolock) ON b.sys_p_key = c.p_key        ");
		sql.append("	WHERE                                                         ");
		sql.append("		a.patient_id = yoc.patient_id                             ");
		sql.append("		AND a.visit_id = yoc.visit_id                             ");
		sql.append("	GROUP BY                                                      ");
		sql.append("		c.drug_name) b                                            ");
		sql.append("	) AS counts                                                   ");
		sql.append("FROM                                                              ");
		sql.append("	YWLSB_ORDERS_COMMENT yoc  (nolock)                                    ");
		sql.append("	LEFT JOIN YWLSB_ORDERS yo (nolock) ON yoc.PATIENT_ID = yo.PATIENT_ID   ");
		sql.append("	AND yoc.visit_id = yo.visit_id                                ");
		sql.append("	AND yoc.order_no = yo.order_no                                ");
		sql.append(" where 1=1 ");
		setParameter(map, "start_time", " and yo.createtime>= :start_time ", sql);
		setParameter(map, "end_time", " and yo.createtime<= :end_time ", sql);
		sql.append("GROUP BY                                                          ");
		sql.append("	yoc.patient_id,                                               ");
		sql.append("	yoc.visit_id,                                                 ");
		sql.append("	yo.createtime                                                 ");
		sql.append("	) a                                                           ");
		sql.append("	where a.counts>0                                              ");
		return executeQuerySingleRecord(sql.toString(), map);
	}

	public Map<String, Object> getPassCount(Map<String, Object> map) throws Exception {
		StringBuffer sql = new StringBuffer();
		sql.append("select count(a.counts)  passcount from                                     "); 
		sql.append("	(                                                                      "); 
		sql.append("select(                                                                    "); 
		sql.append("	SELECT                                                                 "); 
		sql.append("		( CASE comment_result_count.counts WHEN 0 THEN '1' ELSE '0' END )  "); 
		sql.append("	FROM                                                                   "); 
		sql.append("		(                                                                  "); 
		sql.append("	SELECT                                                                 "); 
		sql.append("		count( a.patient_id ) AS counts                                    "); 
		sql.append("	FROM                                                                   "); 
		sql.append("		YWLSB_ORDERS_COMMENT a (nolock)                                            "); 
		sql.append("	WHERE                                                                  "); 
		sql.append("		comment_result = '0'                                               "); 
		sql.append("		AND a.patient_id = yoc.patient_id                                  "); 
		sql.append("		AND a.visit_id = yoc.visit_id                                      "); 
		sql.append("		) comment_result_count                                             "); 
		sql.append("	) AS counts                                                            "); 
		sql.append("FROM                                                                       "); 
		sql.append("	YWLSB_ORDERS_COMMENT yoc (nolock)                                              "); 
		sql.append("	LEFT JOIN YWLSB_ORDERS yo (nolock) ON yoc.PATIENT_ID = yo.PATIENT_ID            "); 
		sql.append("	AND yoc.visit_id = yo.visit_id                                         "); 
		sql.append("	AND yoc.order_no = yo.order_no                                         "); 
		sql.append(" where 1=1 ");
		setParameter(map, "start_time", " and yo.createtime>= :start_time ", sql);
		setParameter(map, "end_time", " and yo.createtime<= :end_time ", sql);
		sql.append("GROUP BY                                                                   "); 
		sql.append("	yoc.patient_id,                                                        "); 
		sql.append("	yoc.visit_id,                                                          "); 
		sql.append("	yo.createtime                                                          "); 
		sql.append("	) a                                                                    "); 
		sql.append("where a.counts=1                                                           "); 
		return executeQuerySingleRecord(sql.toString(), map);
	}

}
